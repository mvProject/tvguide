[versions]
# plugins
kotlin = "1.8.10"
androidGradle = "7.4.1"
crashlyticsGradle = "2.9.1"
ktLint = "10.3.0"
googleServices = "4.3.13"
androidTestInstrumentation = "androidx.test.runner.AndroidJUnitRunner"
applicationId = "com.mvproject.tvprogramguide"

# depUpdate = "0.42.0"
# detekt                              = "1.21.0"

# production libraries
coreKtx = "1.10.1"
appCompat = "1.3.1"
material = "1.4.0"
annotation = "1.6.0"
timber = "5.0.1"
lifecycle = "2.3.1"

# preferences
dataStore = "1.0.0"

# datetime
datetime = "0.4.0"

# Compose
compose = "1.4.3"
composeMaterial3 = "1.1.0"
composeCompiler = "1.4.3"
viewModelCompose = "2.6.1"
composeActivity = "1.7.2"

# navigationCompose
composeNavigationHilt = "1.0.0"
composeNavigation = "2.5.3"
accompanistNavigationAnimated = "0.31.3-beta"

# Accompanist Permissions
accompanistPermissions = "0.31.3-beta"

# di
daggerHilt = "2.46.1"
androidHilt = "1.0.0"

firebaseAnalytics = "21.3.0"
firebaseCrashlytics = "18.3.7"

# coroutines
coroutinesCoreKtx = "1.7.1"
coroutinesAndroid = "1.7.1"

# retrofit
retrofit = "2.9.0"
loggingInterceptor = "5.0.0-alpha.2"
gson = "2.10.1"
gsonConverter = "2.9.0"

# Image
coil = "2.4.0"
coilCompose = "2.4.0"

# Database
room = "2.5.1"

# WorkManager
workRuntime = "2.8.1"
workHilt = "1.0.0"

# Splash API
splash = "1.0.0"

# StartUp API
startUp = "1.1.1"

# test libraries
testJunit = "4.13.2"

kotest = "5.6.2"
mockk = "1.13.5"

# android test libraries
testAndroidJunitExt = "1.1.5"
testAndroidEspresso = "3.5.1"

[libraries]
# production libraries
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
material = { module = "com.google.android.material:material", version.ref = "material" }
annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
lifecycleKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }

# Preference
dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }

# DateTime
kotlinxDatetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

# Coroutine
coroutinesCoreKtx = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesCoreKtx" }
coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutinesAndroid" }

composeActivity = { module = "androidx.activity:activity-compose", version.ref = "composeActivity" }
composeUi = { module = "androidx.compose.ui:ui", version.ref = "compose" }
composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
composeMaterialIcons = { module = "androidx.compose.material:material-icons-core", version.ref = "compose" }
composeMaterialIconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
composeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
composeToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }

viewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "viewModelCompose" }
livedataCompose = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }

composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
composeNavigationHilt = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "composeNavigationHilt" }

# Database
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }

# DI
hilt = { module = "com.google.dagger:hilt-android", version.ref = "daggerHilt" }
hiltCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "daggerHilt" }
androidHiltCompiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidHilt" }

# Network
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
gsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "gsonConverter" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# StartUp
startUp = { module = "androidx.startup:startup-runtime", version.ref = "startUp" }

# Coil
coilKt = { module = "io.coil-kt:coil", version.ref = "coil" }
coilKtCompose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }

# Accompanist Permissions
accompanistPermissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }

# Navigation
navComposeHilt = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "composeNavigationHilt" }
navCompose = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
accompanistNavigationAnimated = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanistNavigationAnimated" }

# WorkManager
workRuntimeKtx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntime" }
workHilt = { module = "androidx.hilt:hilt-work", version.ref = "workHilt" }

# Splash API
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splash" }

# Firebase
firebaseAnalyticsKtx = { module = "com.google.firebase:firebase-analytics-ktx", version.ref = "firebaseAnalytics" }
firebaseCrashlyticsKtx = { module = "com.google.firebase:firebase-crashlytics-ktx", version.ref = "firebaseCrashlytics" }

# test libraries
testJunit = { module = "junit:junit", version.ref = "testJunit" }
kotestRunnerJunit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotestAssertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# android test libraries
testAndroidJunitExt = { module = "androidx.test.ext:junit", version.ref = "testAndroidJunitExt" }
testAndroidCompose = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
testAndroidEspresso = { module = "androidx.test.espresso:espresso-core", version.ref = "testAndroidEspresso" }

# debug libraries
debugComposeTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
debugComposeManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }

[bundles]

appLibraries = [
    "coreKtx",
    "timber",
    "annotation",
    "splashScreen",
    "material"
]

compose = [
    "composeUi",
    "composeActivity",
    "composeMaterial3",
    "composeMaterialIcons",
    "composeMaterialIconsExtended",
    "composeFoundation",
    "composeToolingPreview"
]


navHiltCompose = [
    "composeNavigation",
    "composeNavigationHilt",
    "accompanistNavigationAnimated"
]

coil = [
    "coilKt",
    "coilKtCompose"
]

room = [
    "roomRuntime",
    "roomKtx"
]

workManager = [
    "workRuntimeKtx",
    "workHilt"
]

lifecycleCompose = [
    "viewModelCompose",
    "livedataCompose"
]

coroutines = [
    "coroutinesCoreKtx",
    "coroutinesAndroid"
]

network = [
    "retrofit",
    "gsonConverter",
    "loggingInterceptor",
    "gson"
]

hiltCompiler = [
    "hiltCompiler",
    "androidHiltCompiler"
]

testAndroid = [
    "testAndroidJunitExt",
    "testAndroidEspresso",
    "testAndroidCompose"
]

testDebugCompose = [
    "debugComposeTooling",
    "debugComposeManifest"
]

firebase = [
    "firebaseAnalyticsKtx",
    "firebaseCrashlyticsKtx"
]