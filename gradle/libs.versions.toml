[versions]
# plugins
kotlin = "2.0.20"
gradle = "8.5.2"
ksp = "2.0.20-1.0.25"
crashlyticsGradle = "3.0.2"
ktLint = "10.3.0"
googleServices = "4.4.2"
versionsPlugin = "0.42.0"

# production libraries
coreKtx = "1.13.1"
annotation = "1.8.2"
timber = "5.0.1"
lifecycle-viewmodel = "2.8.5"
material = "1.12.0"

serialization-json = "1.6.3"

# preferences
dataStore = "1.1.1"

# datetime
datetime = "0.6.1"

# Compose
compose-activity = "1.9.2"
compose-lifecycle-viewmodel = "2.8.6"
compose-lifecycle-runtime = "2.8.6"
compose-bom = "2024.09.03"
firebase-bom = "33.4.0"

# navigationCompose
composeNavigationHilt = "1.2.0"
composeNavigation = "2.8.2"

# Accompanist Permissions
accompanistPermissions = "0.32.0"

# di
daggerHilt = "2.50"
androidHilt = "1.2.0"

# coroutines
coroutines-core = "1.9.0"
coroutines-android = "1.9.0"

# retrofit
retrofit = "2.9.0"
loggingInterceptor = "5.0.0-alpha.11"
gson = "2.10.1"
gsonConverter = "2.9.0"

# Image
coil = "2.7.0"

# Database
room = "2.6.1"

ksoup = "0.1.2"

# WorkManager
workRuntime = "2.9.0"
workHilt = "1.2.0"

# StartUp API
startUp = "1.1.1"

# test libraries
testJunit = "4.13.2"

kotest = "6.0.0.M1"
mockk = "1.13.5"

review = "2.0.1"
app-update = "2.1.0"

# android test libraries
testAndroidJunitExt = "1.2.1"
testAndroidEspresso = "3.6.1"

[plugins]
hilt = { id = "com.google.dagger.hilt.android", version.ref = "daggerHilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
android-kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "gradle" }
android-application = { id = "com.android.application", version.ref = "gradle" }
firebase-crashlitycs = { id = "com.google.firebase.crashlytics", version.ref = "crashlyticsGradle" }
gms-googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktLint" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlinx-serialization-plugin = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

[libraries]
# production libraries
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
androidx-material = { module = "com.google.android.material:material", version.ref = "material" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle-viewmodel" }

# Preference
dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }

# DateTime
kotlinxDatetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

# Coroutine
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines-core" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines-android" }

androidx-compose-activity = { module = "androidx.activity:activity-compose", version.ref = "compose-activity" }

androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
androidx-compose-ui-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-material-icons-core = { group = "androidx.compose.material", name = "material-icons-core" }
androidx-compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }
androidx-compose-material3-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }

androidx-compose-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "compose-lifecycle-runtime" }
androidx-compose-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "compose-lifecycle-viewmodel" }

# Navigation
composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
composeNavigationHilt = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "composeNavigationHilt" }

# Database
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }

# DI
hilt = { module = "com.google.dagger:hilt-android", version.ref = "daggerHilt" }
hiltCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "daggerHilt" }
androidHiltCompiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidHilt" }

# Network
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
gsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "gsonConverter" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# StartUp
startUp = { module = "androidx.startup:startup-runtime", version.ref = "startUp" }

# Coil
coilKt = { module = "io.coil-kt:coil", version.ref = "coil" }
coilKtCompose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Accompanist Permissions
accompanistPermissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }

# WorkManager
workRuntimeKtx = { module = "androidx.work:work-runtime", version.ref = "workRuntime" }
workHilt = { module = "androidx.hilt:hilt-work", version.ref = "workHilt" }

# Parse
ksoup = { module = "com.fleeksoft.ksoup:ksoup", version.ref = "ksoup" }
ksoup-network = { module = "com.fleeksoft.ksoup:ksoup-network", version.ref = "ksoup" }

review = { module = "com.google.android.play:review", version.ref = "review" }
review-ktx = { module = "com.google.android.play:review-ktx", version.ref = "review" }

app-update = { module = "com.google.android.play:app-update", version.ref = "app-update" }
app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "app-update" }

firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebase-bom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics" }

# test libraries
testJunit = { module = "junit:junit", version.ref = "testJunit" }
# Kotest
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# android test libraries
testAndroidJunitExt = { module = "androidx.test.ext:junit", version.ref = "testAndroidJunitExt" }
testAndroidEspresso = { module = "androidx.test.espresso:espresso-core", version.ref = "testAndroidEspresso" }

# Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization-json" }

[bundles]

appLibraries = [
    "coreKtx",
    "timber",
    "annotation",
    "androidx-material"
]

compose = [
    "androidx-compose-ui-ui",
    "androidx-compose-activity",
    "androidx-compose-material3-material3",
    "androidx-compose-material-icons-core",
    "androidx-compose-material-icons-extended",
    "androidx-compose-ui-tooling-preview"
]


navHiltCompose = [
    "composeNavigation",
    "composeNavigationHilt"
]

coil = [
    "coilKt",
    "coilKtCompose"
]

room = [
    "roomRuntime",
    "roomKtx"
]

workManager = [
    "workRuntimeKtx",
    "workHilt"
]

playReview = [
    "review",
    "review-ktx"
]

playUpdate = [
    "app-update",
    "app-update-ktx"
]

lifecycleCompose = [
    #"lifecycle-viewmodel-ktx",
    "androidx-compose-lifecycle-runtime",
    "androidx-compose-lifecycle-viewmodel"
]

network = [
    "retrofit",
    "gsonConverter",
    "loggingInterceptor",
    "gson"
]

hiltCompiler = [
    "hiltCompiler",
    "androidHiltCompiler"
]

testAndroid = [
    "testAndroidJunitExt",
    "androidx-compose-ui-test-junit4",
    "testAndroidEspresso"
]

testDebugCompose = [
    "androidx-compose-ui-tooling",
    "androidx-compose-ui-test-manifest"
]

firebase = [
    "firebase-analytics",
    "firebase-crashlytics"
]

kotest = [
    "kotest-runner-junit5",
    "kotest-assertions-core"
]

ksoup = [
    "ksoup",
    "ksoup-network"
]